@using SalesOrder.Models.Dtos
@using SalesOrder.Web.Services.Interface
<BarChart @ref="barChart" Class="mb-4"  />


@code {
    private BarChart barChart;
    [Inject]
    public IDashboardService dashboardService { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await RenderManhattanAsync();

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task RenderManhattanAsync()
    {
        SOBarChartDataset BarChartData = await dashboardService.GetSOMonthlyBarChart();


        var data = new ChartData
            {
                Labels = BarChartData.Label,
                Datasets = new List<IChartDataset>()
                {
                    new BarChartDataset()
                    {
                        Label = "No Of SO",
                        Data = BarChartData.Data ,
                        BackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
                        CategoryPercentage = 0.8,
                        BarPercentage = 1,
                    }
                }
            };

        //var data = new ChartData
        //    {
        //        Labels = new List<string> { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
        //        Datasets = new List<IChartDataset>()
        //        {
        //            new BarChartDataset()
        //            {
        //                Label = "India",
        //                Data = new List<double>{ 9, 11, 9, 4, 17, 16, 9, 11, 5, 14, 15, 6, 15, 9, 6, 8, 13, 3, 4, 11 },
        //                BackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
        //                CategoryPercentage = 0.8,
        //                BarPercentage = 1,
        //            },
        //            new BarChartDataset()
        //            {
        //                Label = "England",
        //                Data = new List<double>{ 1, 0, 7, 11, 5, 2, 13, 8, 9, 10, 7, 13, 7, 5, 9, 5, 10, 5, 11, 2 },
        //                BackgroundColor = new List<string> { "rgb(255, 166, 0)" },
        //                CategoryPercentage = 0.8,
        //                BarPercentage = 1,
        //            }
        //        }
        //    };

        var options = new BarChartOptions();

        options.Interaction.Mode = InteractionMode.Index;

        options.Plugins.Title.Text = "Sate Wise Last 12 Month  Sales Order";
        options.Plugins.Title.Display = true;
        options.Plugins.Title.Font.Size = 20;

        options.Responsive = true;

        options.Scales.X.Title.Text = "State";
        options.Scales.X.Title.Display = true;

        options.Scales.Y.Title.Text = "No of SO";
        options.Scales.Y.Title.Display = true;

        await barChart.UpdateAsync(data, options);
    }

}