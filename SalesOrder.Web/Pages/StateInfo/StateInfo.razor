@page "/StateInfo/StateInfo"
@inherits StateInfoBase
@inject IJSRuntime JsRuntime

@if (!AddEditShowed)
{
    <h3 class="mb-5">State Info</h3>
}


@if (stateInfos == null)
{
    <h3>Loading State ...</h3>
}


@if (stateInfos != null && !AddEditShowed)
{
    @*State List*@
    <div class="row">
        <button type="button" onclick="@OnAddClick" class="btn btn-primary" style="width:fit-content;text-align:right">Add State</button>
    </div>
    
    if (stateInfos.Count() > 0)
    {
        <table class="table table-striped">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">Details</th>
                    <th></th>
                </tr>
            </thead>


        <tbody>
        @foreach (var itm in stateInfos)
        {
            <tr>
                <td>@itm.Id</td>
                <td>@itm.Name</td>
                <td>
                    @itm.Description
                </td>

                        <td>
                            <button class="btn btn-outline-dark" @onclick="@(() => OnShowEdit(@itm.Id))">Edit</button>
                        </td>

            </tr>
        }

            </tbody>
        </table>
    
    }
}


@if (AddEditShowed)
{
    @*State Add/Edit*@

    <StateAddEdit stateId="@selectedStateId" FromChildCloseAction="@showSalesInfo" 
        ></StateAddEdit>
}


<BlazorModal ShowModal=@showModal>
    <Body>
        <StateAddEdit stateId="@selectedStateId" FromChildCloseAction="@showSalesInfo"></StateAddEdit>
    </Body>
</BlazorModal>


<Modal @ref="modal" Size="ModalSize.Large" />


<Toasts class="p-3" Messages="messages" Placement="ToastsPlacement.TopRight" />
